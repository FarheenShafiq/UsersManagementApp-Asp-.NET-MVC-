@model UsersManagementApp.Models.UsersModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Register User</h2>

@using (Html.BeginForm("Register", "UsersManagement", FormMethod.Post, new { @class = "form", onsubmit = "return validateForm()" }))
{
<div class="form-group">
    <label>Name:</label>
    <input id="Name" name="Name" class="form-control" />
    <span id="errorName" class="text-danger"></span>
</div>
<div class="form-group">
    <label>Email:</label>
    <input id="Email" type="email" name="Email" class="form-control" />
    <span id="errorEmail" class="text-danger"></span>
</div>
<div class="form-group">
    <label>Password:</label>
    <input id="Password" name="Password" type="password" class="form-control" />
    <span id="errorPassword" class="text-danger"></span>
</div>
<div class="form-group">
    <label>Date of Birth:</label>
    <input id="DateOfBirth" name="DateOfBirth" type="date" class="form-control" />
    <span id="errorDOB" class="text-danger"></span>
</div>
<div class="form-group">
    <label>Department:</label>
    <input id="Department" name="Department" class="form-control" />
    <span id="errorDepartment" class="text-danger"></span>
</div>
<div class="form-group">
    <label>Designation:</label>
    <input id="Designation" name="Designation" class="form-control" />
    <span id="errorDesignation" class="text-danger"></span>
</div>
<button type="submit" class="btn btn-primary">Register</button>
}

<script>
    function validateForm() {
        let valid = true;

        // Clear old errors
        document.querySelectorAll('.text-danger').forEach(e => e.innerText = '');

        // Name
        let name = document.getElementById("Name").value.trim();
        if (name === "") {
            document.getElementById("errorName").innerText = "Name is required.";
            valid = false;
        }


        // Password
        let password = document.getElementById("Password").value.trim();
        if (password === "") {
            document.getElementById("errorPassword").innerText = "Password is required.";
            valid = false;
        }

        // Date of Birth
        let dob = document.getElementById("DateOfBirth").value;
        if (dob === "") {
            document.getElementById("errorDOB").innerText = "Date of Birth is required.";
            valid = false;
        } else {
            let dobDate = new Date(dob);
            let today = new Date();
            let age = today.getFullYear() - dobDate.getFullYear();
            let m = today.getMonth() - dobDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < dobDate.getDate())) {
                age--;
            }
            if (age < 18) {
                document.getElementById("errorDOB").innerText = "Must be 18 or older.";
                valid = false;
            }
        }

        // Department
        let dept = document.getElementById("Department").value.trim();
        if (dept === "") {
            document.getElementById("errorDepartment").innerText = "Department is required.";
            valid = false;
        }

        // Designation
        let desg = document.getElementById("Designation").value.trim();
        if (desg === "") {
            document.getElementById("errorDesignation").innerText = "Designation is required.";
            valid = false;
        }

        return valid;
    }
</script>
